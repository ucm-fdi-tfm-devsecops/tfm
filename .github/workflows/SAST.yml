name: Step 2.2 - SAST # Nombre descriptivo que se visualizará en el menú de actions una vez se lance el workflow.

on:
  workflow_dispatch: # Para lanzar unicamente el workflow de manera manual.
  workflow_call: # Para que otros workflows puedan llamarlo.

jobs: # Se usa parra definir uno o más trabajos a ejecutar en el workflow.
  semgrep-sast: # ID interno del job para poder referenciarlo o establecer depoendencias con/en otros jobs.
    name: Semgrep SAST Analysis
    runs-on: ubuntu-latest # Indica en qué tipo de runner (maquina virtual) se va a ejecutar este job.

    permissions:
      contents: read # Permite poder acceder al código fuente del repositorio.
      security-events: write # Permite poder subir los resultados del escaneo (SARIF) al Security Dashboard de GitHub.

    steps:
      
      - name: Checkout repository
      # Descargamos el codigo del repositorio en el runner de GitHub Actions para que los siguientes steps tengan acceso.
        uses: actions/checkout@v4

      - name: Install Semgrep
      # Instalamos Semgrep en el runner para que, via Python, pueda utilizar el comando "semgrep".
        run: pipx install semgrep

      - name: Run Semgrep SAST
      # Ejecutamos el semgrep para realizar el analisis estático de seguridad con los siguientes parámetros:
        # mkdir -p results -> Creamos el directorio que se usará como output de los resultados.
        # semgrep scan -> lanza semgrep en modo SAST.
        # --config auto -> Elige las reglas automaticamente en función del lenguaje detectado en el repositorio.
        # --sarif -> Genera la salida en formato SARIF, estándar soportado por GitHub Security Dashboard.
        # --output results/semgrep-results.sarif -> Nombre del archivo y directorio donde se guardaran los resultados.
        # . -> Escanea todo el repositorio.
        run: |
          mkdir -p results
          semgrep scan --config auto --sarif --output results/semgrep-results.sarif .

      - name: Upload SARIF to GitHub Security Dashboard
      # Usamos la accion oficial de Github para subir informes en formato SARIF, generados por el step anterior, al Security Dashboard.
        uses: github/codeql-action/upload-sarif@v3
        # Tanto si falla el escaneo como si termina correctamente, este step se ejecuta siempre.
        # Fallar implica que el workflow devuelva un codigo de error distinto a 0.
        if: success() || failure()
        with:
          sarif_file: results/semgrep-results.sarif # Nombre del archivo y directorio donde se guardaron los resultados al finalizar el escaneo.
